name: Restart Cloudtype with Selenium

on:
  schedule:
    - cron: "0 */23 * * *"  # 매 23시간마다 실행
  workflow_dispatch:  # 수동 실행 옵션

jobs:
  restart-cloudtype:
    runs-on: ubuntu-latest

    steps:
      # Python 환경 설정
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      # Selenium 및 필요한 패키지 설치
      - name: Install dependencies
        run: |
          pip install selenium

      # Chrome 및 ChromeDriver 설치
      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          # Chrome 설치
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -f install -y
          # ChromeDriver 설치 (Chrome 버전에 맞춤)
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d '.' -f 1)
          wget -q "https://chromedriver.storage.googleapis.com/${CHROME_VERSION}.0/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/

      # Chrome 및 ChromeDriver 디버깅 (옵션)
      - name: Debug Chrome and ChromeDriver
        run: |
          google-chrome --version
          chromedriver --version

      # Selenium 스크립트 실행
      - name: Restart Cloudtype Server
        env:
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
        run: |
          python <<EOF
          # Selenium 스크립트 삽입
          from selenium.webdriver.common.by import By
          from selenium.webdriver.support.ui import WebDriverWait
          from selenium.webdriver.support import expected_conditions as EC
          from selenium.webdriver.chrome.options import Options
          from selenium import webdriver
          import time

          # Chrome 옵션 설정
          chrome_options = Options()
          chrome_options.add_argument("--headless")
          chrome_options.add_argument("--no-sandbox")
          chrome_options.add_argument("--disable-dev-shm-usage")

          # WebDriver 설정
          driver = webdriver.Chrome(options=chrome_options)

          try:
              # GitHub 로그인
              driver.get("https://github.com/login")
              WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//*[@id='login_field']"))).send_keys("${{ secrets.GIT_USERNAME }}")
              WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//*[@id='password']"))).send_keys("${{ secrets.GIT_PASSWORD }}")
              WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, "//*[@id='login']/div[3]/form/div/input[13]"))).click()
              print("GitHub 로그인 완료")
              time.sleep(5)

              # Cloudtype 로그인
              driver.get("https://app.cloudtype.io/auth/signin?redirect=/")
              WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, "//*[@id='page']/div/div[1]/div/div[2]/div/div[2]/div[1]/a[1]"))).click()
              print("Cloudtype GitHub 로그인 버튼 클릭")
              time.sleep(10)

              # Cloudtype 대시보드 확인
              driver.get("https://app.cloudtype.io/@hoding1023/youtubecloud:main/youtubesummarizer")
              WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//*[@id='user-profile-dropdown']")))
              print("Cloudtype 로그인 성공")

              # 정지 버튼 클릭
              stop_button = WebDriverWait(driver, 20).until(
                  EC.element_to_be_clickable((By.XPATH, "//*[@id='page']/div/div[2]/div/div/div[2]/div[2]/div/a[2]"))
              )
              stop_button.click()
              print("서버 정지 완료")

              # 시작 버튼 클릭
              start_button = WebDriverWait(driver, 20).until(
                  EC.element_to_be_clickable((By.XPATH, "//*[@id='page']/div/div[2]/div/div/div[2]/div[2]/div/a[1]"))
              )
              start_button.click()
              print("서버 시작 완료")
          except Exception as e:
              print("오류 발생:", e)
          finally:
              driver.quit()
          EOF
